CREATE TABLE Person(
    username VARCHAR(20), 
    password CHAR(64), 
    firstName VARCHAR(20),
    lastName VARCHAR(20),
    bio VARCHAR(1000),
    PRIMARY KEY (username)
);


CREATE TABLE Friendgroup(
    groupOwner VARCHAR(20), 
    groupName VARCHAR(20), 
    description VARCHAR(1000), 
    PRIMARY KEY (groupOwner, groupName),
    FOREIGN KEY (groupOwner) REFERENCES Person(username)
);


CREATE TABLE Photo (
    photoID int AUTO_INCREMENT, 
    postingdate DATETIME,
    filepath VARCHAR(100),
    allFollowers Boolean,
    caption VARCHAR(100),
    photoPoster VARCHAR(20),
    PRIMARY KEY (photoID),
    FOREIGN KEY(photoPoster) REFERENCES Person(username)
);


CREATE TABLE Likes (
    username VARCHAR(20), 
    photoID int, 
    liketime DATETIME, 
    rating int,
    PRIMARY KEY(username, photoID), 
    FOREIGN KEY(username) REFERENCES Person(username),
    FOREIGN KEY(photoID) REFERENCES Photo(photoID)
);  


CREATE TABLE Tagged (
    username VARCHAR(20), 
    photoID int, 
    tagstatus Boolean, 
    PRIMARY KEY(username, photoID), 
    FOREIGN KEY(username) REFERENCES Person(username),
    FOREIGN KEY(photoID)REFERENCES Photo(photoID)
);              


CREATE TABLE SharedWith ( 
    groupOwner VARCHAR(20), 
    groupName VARCHAR(20), 
    photoID int, 
    PRIMARY KEY(groupOwner, groupName, photoID),
    FOREIGN KEY(groupOwner, groupName) REFERENCES Friendgroup(groupOwner, groupName), 
    FOREIGN KEY (photoID) REFERENCES Photo(photoID)
);


CREATE TABLE BelongTo (
    member_username VARCHAR(20), 
    owner_username VARCHAR(20),
    groupName VARCHAR(20), 
    PRIMARY KEY(member_username, owner_username, groupName), 
    FOREIGN KEY(member_username) REFERENCES Person(username),
    FOREIGN KEY(owner_username, groupName)REFERENCES Friendgroup(groupOwner, groupName)
);




CREATE TABLE Follow (
    username_followed VARCHAR(20), 
    username_follower VARCHAR(20), 
    followstatus Boolean,
    PRIMARY KEY(username_followed , username_follower),
    FOREIGN KEY(username_followed) REFERENCES Person(username),
    FOREIGN KEY(username_follower) REFERENCES Person(username)
);

INSERT INTO `Person` (`username`, `password`, `firstName`, `lastName`, `bio`) VALUES
('divya', 'divya', 'Divya', 'Madala', 'HIII'),
('simone', 'simone', 'Simone', 'Brown', 'im cool');

INSERT INTO `Photo` (`photoID`, `postingdate`, `filepath`, `allFollowers`, `caption`, `photoPoster`) VALUES
(8, '2019-11-24 14:34:29', 'p1.png', 0, 'hiii', 'divya'),
(9, '2019-11-25 12:24:54', 'p2.png', 1, 'hello', 'simone'),
(10, '2019-11-25 12:25:12', 'p2.png', 1, 'hello', 'simone'),
(11, '2019-11-25 12:26:38', 'p3.png', 1, 'picture 3', 'simone'),
(12, '2019-11-25 12:33:50', 'p2.png', 1, 'pic 2', 'divya'),
(13, '2019-11-25 12:35:27', 'p3.png', 1, 'pic 3', 'divya'),
(14, '2019-11-25 12:38:04', 'p3.png', 1, 'another pic', 'divya'),
(15, '2019-11-25 12:43:32', 'p4.png', 1, 'another', 'divya'),
(16, '2019-11-25 12:44:46', 'p2.png', 1, 'anotha', 'divya');

INSERT INTO `Likes` (`username`, `photoID`, `liketime`, `rating`) VALUES
('divya', 8, NULL, 5),
('divya', 14, NULL, 3),
('simone', 10, NULL, 5),
('simone', 12, NULL, 4);

